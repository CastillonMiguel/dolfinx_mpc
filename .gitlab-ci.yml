--- # Build and test dolfinx_mpc
test-complex:
  stage: test
  image:
    name: dolfinx/dev-env-complex
    entrypoint: [""]
  before_script:
    # Install custom dolfin
    - pip3 install --no-cache-dir git+https://github.com/FEniCS/fiat.git
    - pip3 install --no-cache-dir git+https://github.com/FEniCS/ufl.git
    - pip3 install --no-cache-dir git+https://github.com/FEniCS/ffcx.git
    - git clone https://github.com/fenics/dolfinx.git
    - cd dolfinx
    - mkdir build
    - cd build
    - cmake -G Ninja ../cpp
    - ninja ${MAKEFLAGS} install
    - cd ../python
    - pip3 install .
    - cd ../../
    # Install MPC
    - mkdir -p build
    - cd build
    - cmake -G Ninja -DCMAKE_BUILD_TYPE=Developer ../cpp/
    - ninja -j3 install
    - cd ../python
    - pip3 install -e . --upgrade

  script:
    - flake8 .
    - cd tests
    - python3 -m pytest .
    - mpirun -n 2 python3 -m pytest .
    - mpirun -n 3 python3 -m pytest .
    - mpirun -n 4 python3 -m pytest .
    - cd ../demos
    - mkdir meshes
    - python3 demo_elasticity.py
    - mpirun -n 4 python3 demo_elasticity.py
    - python3 demo_periodic.py
    - mpirun -n 4 python3 demo_periodic.py
    - python3 demo_stokes.py
    - mpirun -n 4 python3 demo_stokes.py
    - python3 demo_periodic3d.py
    - mpirun -n 4 python3 demo_periodic3d.py
    - cd cubes
    - mkdir meshes
    - mkdir results
    - python3 create_and_export_mesh.py
    - python3 cube_bench.py
    - python3 rotated_cube.py
    - python3 cube_bench3d.py

test-real:
  stage: test
  image:
    name: dolfinx/dev-env-real
    entrypoint: [""]
  before_script:
    # Install custom dolfin
    - pip3 install --no-cache-dir git+https://github.com/FEniCS/fiat.git
    - pip3 install --no-cache-dir git+https://github.com/FEniCS/ufl.git
    - pip3 install --no-cache-dir git+https://github.com/FEniCS/ffcx.git
    - git clone https://github.com/fenics/dolfinx.git
    - cd dolfinx
    - mkdir build
    - cd build
    - cmake -G Ninja ../cpp
    - ninja ${MAKEFLAGS} install
    - cd ../python
    - pip3 install .
    - cd ../../
    # Install dolfinx mpc
    - mkdir -p build
    - cd build
    - cmake -G Ninja -DCMAKE_BUILD_TYPE=Developer ../cpp/
    - ninja -j3 install
    - cd ../python
    - pip3 install -e . --upgrade

  script:
    - flake8 .
    - cd tests
    - python3 -m pytest .
    - mpirun -n 2 python3 -m pytest .
    - mpirun -n 3 python3 -m pytest .
    - mpirun -n 4 python3 -m pytest .
    - cd ../demos
    - mkdir meshes
    - python3 demo_elasticity.py
    - mpirun -n 4 python3 demo_elasticity.py
    - python3 demo_periodic.py
    - mpirun -n 4 python3 demo_periodic.py
    - python3 demo_stokes.py
    - mpirun -n 4 python3 demo_stokes.py
    - python3 demo_periodic3d.py
    - mpirun -n 4 python3 demo_periodic3d.py
    - cd cubes
    - mkdir meshes
    - mkdir results
    - python3 create_and_export_mesh.py
    - python3 cube_bench.py
    - python3 rotated_cube.py
    - python3 cube_bench3d.py
# test:
#   stage: test
#   image:
#     name: dolfinx/dev-env-real
#     entrypoint: [""]
#   before_script:
#     - pip3 install --no-cache-dir git+https://github.com/FEniCS/fiat.git
#     - pip3 install --no-cache-dir git+https://github.com/FEniCS/ufl.git
#     - pip3 install --no-cache-dir git+https://github.com/FEniCS/ffcx.git
#     - git clone https://github.com/fenics/dolfinx.git
#     - cd dolfinx
#     - mkdir build
#     - cd build
#     - cmake -G Ninja ../cpp
#     - ninja ${MAKEFLAGS} install
#     - cd ../python
#     - pip3 install .
#     - cd ../../
#     - mkdir -p build
#     - cd build
#     - cmake -G Ninja -DCMAKE_BUILD_TYPE=Developer ../cpp/
#     - ninja -j3 install
#     - cd ../python
#     - pip3 install -e . --upgrade
